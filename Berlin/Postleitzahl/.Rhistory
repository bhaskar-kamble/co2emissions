for (et in et_list) {
storage[[et]] <- lm(get(et) ~ abrechnungsjahr , data = obj)
obj_new[[et]] <- as.numeric(predict(storage[[et]] , newdata = obj))
}
return(obj_new)
}
require(ggplot2)
#plot_title <- "Berlin, alle Gebäude (MFH + 1-2 FH)"
plot_title <- "Abbildung a: Berlin, Wohngebäude, CO2-Emissionen aus Beheizung 2002 - 2018 in kilo t."
linmod <- lm(data=co2_abs_all,formula=total~abrechnungsjahr)
a <- as.numeric(coefficients(linmod)[1])
b <- as.numeric(coefficients(linmod)[2])
if (a<0) {
asign <- " "
} else {asign <- "+"}
if (b<0) {
bsign <- " "
} else {bsign <- " "}
ggplot()+geom_line(data=co2_abs_all,aes(x=abrechnungsjahr,y=total),color="blue")+geom_point(data=co2_abs_all,aes(x=abrechnungsjahr,y=total),color="blue")+theme_bw()+labs(x="Jahr",y="1.000 Tonnen",title=plot_title)+ylim(0,max(co2_abs_all$total))+geom_smooth(method="lm",data=co2_abs_all,aes(x=abrechnungsjahr,y=total),se=FALSE)+annotate(geom="text",label=paste0(bsign,as.character(round(b,0)),"x",asign,as.character(round(a,0))),x=2008,y=4000,size=6)+scale_x_continuous(breaks=seq(2002,2018,2))+theme(plot.title=element_text(size=12), axis.title.x=element_text(size=20, face="bold"), axis.title.y=element_text(size=20, face="bold"),  axis.text.x=element_text(size=15,face="bold"), axis.text.y=element_text(size=15,face="bold"))
co2_abs_cumsums <- find_cumsums(co2_abs_all , c("abrechnungsjahr","total"))
et_list <- names(co2_abs_cumsums)[names(co2_abs_cumsums)!="abrechnungsjahr"]
plot_title <- "Abbildung b: Berlin, Wohngebäude, CO2-Emissionen aus Beheizung 2002 - 2018 nach Energieträgern, Anteile in kilo t."
plot_byET(co2_abs_cumsums,"Jahr","1.000 Tonnen", plot_title)
co2_abs_linear <- linearizer(co2_abs_cumsums)
plot_title <- "Abbildung b(lin): Berlin, Wohngebäude, CO2-Emissionen aus Beheizung 2002 - 2018 nach Energieträgern, Anteile in kilo t."
plot_byET(co2_abs_linear,"Jahr","1.000 Tonnen", plot_title)
co2_rel_all <- find_proportions(co2_abs_all, c("abrechnungsjahr","total") )
co2_rel_cumsums <- find_cumsums(co2_rel_all , "abrechnungsjahr")
plot_title <- "Abbildung c: Berlin, Wohngebäude, Emissionen aus Beheizung 2002 - 2018 nach Energieträgern, Anteile in %"
plot_byET(co2_rel_cumsums , "Jahr" , "Anteile in Prozent" , plot_title)
co2_rel_linear <- linearizer(co2_rel_cumsums)
plot_title <- "Abbildung c(lin): Berlin, Wohngebäude, Emissionen aus Beheizung 2002 - 2018 nach Energieträgern, Anteile in %"
plot_byET(co2_rel_linear , "Jahr" , "Anteile in Prozent" , plot_title)
totalArea <- read.table("berlin_wohnflaeche.txt",header=TRUE)
totalArea <- totalArea*1000000
totalArea$totArea <- rowSums(totalArea)
totalArea$abrechnungsjahr <- 2002:2018
totalArea <- totalArea[ , c("abrechnungsjahr","totArea")]
spz_co2 <- 1e6*co2_abs_all$total/totalArea$totArea
spez_co2_emission <- data.frame(abrechnungsjahr=2002:2018 , spez_co2 = spz_co2 )
linmod_spez <- lm(data=spez_co2_emission,formula=spez_co2~abrechnungsjahr)
a_spez <- as.numeric(coefficients(linmod_spez)[1])
b_spez <- as.numeric(coefficients(linmod_spez)[2])
if (a_spez<0) {
asign_spez <- " "
} else {asign_spez <- "+"}
if (b_spez<0) {
bsign_spez <- " "
} else {bsign_spez <- " "}
plot_title <- "Abbildung d1: Berlin, Wohngebäude, flächenbezogene CO2-Emission 2002 - 2018"
ggplot()+geom_line(data=spez_co2_emission,aes(x=abrechnungsjahr,y=spez_co2),color="blue")+geom_point(
data=spez_co2_emission,aes(x=abrechnungsjahr,y=spez_co2),color="blue")+theme_bw()+labs(x="Jahr",
y="kg/qm",title=plot_title)+ylim(0,max(spez_co2_emission$spez_co2))+geom_smooth(
method="lm",data=spez_co2_emission,aes(x=abrechnungsjahr,y=spez_co2),se=FALSE)+annotate(
geom="text",label=paste0(bsign_spez,as.character(round(b_spez,2)),"x",asign_spez,as.character(round(a_spez,0))
),x=2008,y=25,size=6)+scale_x_continuous(breaks=seq(2002,2018,2))+theme(plot.title=element_text(size=12), axis.title.x=element_text(size=20, face="bold"), axis.title.y=element_text(size=20, face="bold"),  axis.text.x=element_text(size=15,face="bold"), axis.text.y=element_text(size=15,face="bold"))
#totalArea
totalAreamqm <- totalArea
totalAreamqm$totArea <- 1e-6*totalAreamqm$totArea
linmod_spez <- lm(data=totalAreamqm,formula=totArea~abrechnungsjahr)
a_spez <- as.numeric(coefficients(linmod_spez)[1])
b_spez <- as.numeric(coefficients(linmod_spez)[2])
if (a_spez<0) {
asign_spez <- " "
} else {asign_spez <- "+"}
if (b_spez<0) {
bsign_spez <- " "
} else {bsign_spez <- " "}
plot_title <- "Abbildung d2: Berlin, Wohngebäude, beheizte Wohnfläche 2002 - 2018"
ggplot()+geom_line(data=totalAreamqm,aes(x=abrechnungsjahr,y=totArea),color="blue")+geom_point(
data=totalAreamqm,aes(x=abrechnungsjahr,y=totArea),color="blue")+theme_bw()+labs(x="Jahr",
y="Mio. qm",title=plot_title)+ylim(0,max(totalAreamqm$totArea))+geom_smooth(
method="lm",data=totalAreamqm,aes(x=abrechnungsjahr,y=totArea),se=FALSE)+annotate(
geom="text",label=paste0(bsign_spez,as.character(round(b_spez,2)),"x",asign_spez,as.character(round(a_spez,0))
),x=2008,y=125,size=6)+scale_x_continuous(breaks=seq(2002,2018,2))+theme(plot.title=element_text(size=12), axis.title.x=element_text(size=20, face="bold"), axis.title.y=element_text(size=20, face="bold"),  axis.text.x=element_text(size=15,face="bold"), axis.text.y=element_text(size=15,face="bold"))
library(gridExtra)
library(grid)
table01 <- data.frame(abrechnungsjahr=2002:2018 , spez_co2 = spez_co2_emission$spez_co2 , flaeche = totalAreamqm$totArea, co2emission = 0.001*co2_abs_all$total)
table01$spez_co2 <- round(table01$spez_co2 , 2)
table01$co2emission <- round(table01$co2emission , 2)
table01$flaeche <- round(table01$flaeche , 2)
names(table01) <- c("Jahr \n","CO2-Emissionen \n je qm (kg/qm)","Fläche \n (Mio. qm)","Co2-Emissionen \n (Mio. t.)")
tab01 <- tableGrob(table01,theme=ttheme_default(base_size = 14),rows=NULL)
#table01[1 , 1:4]
header <- tableGrob(table01[1 , 1] , rows=NULL, cols="Tabelle: Berlin, Wohngebäude,\nflächenbezogene CO2-Emission und beheizte \n Wohnfläche 2002 - 2018")
#("Tabelle: Berlin, Wohngebäude,nflÃ¤chenbezogene CO2-Emission und beheiztenWohnfläche 2002 - 2018")
jn <- gtable_combine(header[1,],tab01,along=2)
#jn <- tab01
#jn$widths <- rep(max(jn$widths),length(jn$widths))
jn$layout[1:2,c("l","r")] <- list(1,4)
grid.newpage()
grid.draw(jn)
#grid.draw(tab01)
rep(5)
rep(5,5)
33.215   +	 135.361
par()
par("ylbias")
par($ylbias)
par
par()
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
#load("../MFH20022018_v2.RData")
load("../SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$gtype <- "SFH"
#MFH20022018$gtype <- "MFH"
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
load("../MFH20022018_v2.RData")
#load("SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
#SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
#SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$gtype <- "SFH"
MFH20022018$gtype <- "MFH"
subset_data_by_region <- function(inputdata , region) {
outputdata <- inputdata[inputdata$Landkreis_von_GS == region , ]
return(outputdata)
}
weather_data <- read.table("berlin_wetter_tegel.txt",header=TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
#load("../MFH20022018_v2.RData")
load("../SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$gtype <- "SFH"
#MFH20022018$gtype <- "MFH"
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
load("../MFH20022018_v2.RData")
#load("SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
#SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
#SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$gtype <- "SFH"
MFH20022018$gtype <- "MFH"
subset_data_by_region <- function(inputdata , region) {
outputdata <- inputdata[inputdata$Landkreis_von_GS == region , ]
return(outputdata)
}
weather_data <- read.table("berlin_wetter_tegel.txt",header=TRUE)
names(weather_data) <- c("wind","sun","bedeckung","temperatur")
weather_data$abrechnungsjahr <- 2002:2018
berlin_sfh <- subset_data_by_region(SFH20022018,"Berlin, Stadt")
berlin_mfh <- subset_data_by_region(MFH20022018,"Berlin, Stadt")
#remove additional outliers
#berlin_mfh <- remove_outliers(berlin_mfh , c("gebaeude_baujahr","gebaeude_nutzflaeche","verbrauch_gesamt_kwh","verbrauch_gesamt_kwh_spez"))
berlin_mfh <- berlin_mfh[(berlin_mfh$verbrauch_gesamt_kwh_spez > 15)&(berlin_mfh$verbrauch_gesamt_kwh_spez < 400) , ]
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_wasser"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_wasser"] <- "strom"
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/Postleitzahl")
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/Postleitzahl")
plz_bezirk <- read.csv2("Berlin_Bezirke_PLZ.csv")
plz_bezirk
names(plz_bezirk) <- c(
"charlottenburg_wilmersdorf",
"friedrichshain_kreuzberg",
"lichtenberg",
"marzahn_hellersdorf",
"mitte",
"neukoelln",
"pankow",
"reinickendorf",
"spandau",
"steglitz_zehlendorf",
"tempelhof_schoeneberg",
"treptow_koepenick"
)
library(reshape)
plz_bezirk_long <- melt(plz_bezirk)
plz_bezirk_long <- plz_bezirk_long[!is.na(plz_bezirk_long$value)  ,  ]
plz_bezirk_long$variable <- as.character(plz_bezirk_long$variable)
str(plz_bezirk_long)
plz_bezirk_long
write.csv2(plz_bezirk_long,file="plz_bezirk_long.csv",row.names = FALSE)
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/Postleitzahl")
plz_bezirk <- read.csv2("Berlin_Bezirke_PLZ.csv")
names(plz_bezirk) <- c(
"charlottenburg_wilmersdorf",
"friedrichshain_kreuzberg",
"lichtenberg",
"marzahn_hellersdorf",
"mitte",
"neukoelln",
"pankow",
"reinickendorf",
"spandau",
"steglitz_zehlendorf",
"tempelhof_schoeneberg",
"treptow_koepenick"
)
library(reshape)
plz_bezirk_long <- melt(plz_bezirk)
plz_bezirk_long <- plz_bezirk_long[!is.na(plz_bezirk_long$value)  ,  ]
plz_bezirk_long$variable <- as.character(plz_bezirk_long$variable)
str(plz_bezirk_long)
names(plz_bezirk_long) <- c("bezirk","plz")
write.csv2(plz_bezirk_long,file="plz_bezirk_long.csv",row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
#load("../MFH20022018_v2.RData")
load("../SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$gtype <- "SFH"
#MFH20022018$gtype <- "MFH"
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
load("../MFH20022018_v2.RData")
#load("SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
#SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
#SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$gtype <- "SFH"
MFH20022018$gtype <- "MFH"
subset_data_by_region <- function(inputdata , region) {
outputdata <- inputdata[inputdata$Landkreis_von_GS == region , ]
return(outputdata)
}
weather_data <- read.table("berlin_wetter_tegel.txt",header=TRUE)
names(weather_data) <- c("wind","sun","bedeckung","temperatur")
weather_data$abrechnungsjahr <- 2002:2018
berlin_sfh <- subset_data_by_region(SFH20022018,"Berlin, Stadt")
berlin_mfh <- subset_data_by_region(MFH20022018,"Berlin, Stadt")
#remove additional outliers
#berlin_mfh <- remove_outliers(berlin_mfh , c("gebaeude_baujahr","gebaeude_nutzflaeche","verbrauch_gesamt_kwh","verbrauch_gesamt_kwh_spez"))
berlin_mfh <- berlin_mfh[(berlin_mfh$verbrauch_gesamt_kwh_spez > 15)&(berlin_mfh$verbrauch_gesamt_kwh_spez < 400) , ]
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_wasser"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_wasser"] <- "strom"
getwd()
getwd()
read.csv2("./Postleitzahl/plz_bezirk_long.csv")
str(berlin_mfh)
str(berlin_sfh)
str(berlin_mfh)
class(berlin_mfh$sto_plz)
class(berlin_sfh$sto_plz)
length(as.integer(berlin_sfh$sto_plz))
sum(is.na(as.integer(berlin_sfh$sto_plz)))
sum(is.na(as.integer(berlin_mfh$sto_plz)))
plz_bezirk_long
str(plz_bezirk_long)
sfhtemp <- berlin_sfh[1:10 , ]
sfhtemp
plz_bezirk_long
merge(sfhtemp,plz_bezirk_long,by.x=sto_plz , y = plz)
names(plz_bezirk_long)
merge(sfhtemp,plz_bezirk_long,by.x=sto_plz , by.y = plz)
merge(sfhtemp,plz_bezirk_long,by.x="sto_plz" , by.y = "plz")
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
#load("../MFH20022018_v2.RData")
load("../SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$gtype <- "SFH"
#MFH20022018$gtype <- "MFH"
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
load("../MFH20022018_v2.RData")
#load("SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
#SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
#SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$gtype <- "SFH"
MFH20022018$gtype <- "MFH"
subset_data_by_region <- function(inputdata , region) {
outputdata <- inputdata[inputdata$Landkreis_von_GS == region , ]
return(outputdata)
}
weather_data <- read.table("berlin_wetter_tegel.txt",header=TRUE)
names(weather_data) <- c("wind","sun","bedeckung","temperatur")
weather_data$abrechnungsjahr <- 2002:2018
berlin_sfh <- subset_data_by_region(SFH20022018,"Berlin, Stadt")
berlin_mfh <- subset_data_by_region(MFH20022018,"Berlin, Stadt")
#remove additional outliers
#berlin_mfh <- remove_outliers(berlin_mfh , c("gebaeude_baujahr","gebaeude_nutzflaeche","verbrauch_gesamt_kwh","verbrauch_gesamt_kwh_spez"))
berlin_mfh <- berlin_mfh[(berlin_mfh$verbrauch_gesamt_kwh_spez > 15)&(berlin_mfh$verbrauch_gesamt_kwh_spez < 400) , ]
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_wasser"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_wasser"] <- "strom"
getwd()
plz_bezirk <- read.csv2("./Postleitzahl/plz_bezirk_long.csv")
berlin_mfh$sto_plz <- as.integer(berlin_mfh$sto_plz)
berlin_sfh$sto_plz <- as.integer(berlin_sfh$sto_plz)
berlin_sfh <- merge(berlin_sfh , plz_bezirk_long , by.x="sto_plz" , by.y = "plz")
berlin_mfh <- merge(berlin_mfh , plz_bezirk_long , by.x="sto_plz" , by.y = "plz")
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
#load("../MFH20022018_v2.RData")
load("../SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$gtype <- "SFH"
#MFH20022018$gtype <- "MFH"
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
load("../MFH20022018_v2.RData")
#load("SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
#SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
#SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$gtype <- "SFH"
MFH20022018$gtype <- "MFH"
subset_data_by_region <- function(inputdata , region) {
outputdata <- inputdata[inputdata$Landkreis_von_GS == region , ]
return(outputdata)
}
weather_data <- read.table("berlin_wetter_tegel.txt",header=TRUE)
names(weather_data) <- c("wind","sun","bedeckung","temperatur")
weather_data$abrechnungsjahr <- 2002:2018
berlin_sfh <- subset_data_by_region(SFH20022018,"Berlin, Stadt")
berlin_mfh <- subset_data_by_region(MFH20022018,"Berlin, Stadt")
#remove additional outliers
#berlin_mfh <- remove_outliers(berlin_mfh , c("gebaeude_baujahr","gebaeude_nutzflaeche","verbrauch_gesamt_kwh","verbrauch_gesamt_kwh_spez"))
berlin_mfh <- berlin_mfh[(berlin_mfh$verbrauch_gesamt_kwh_spez > 15)&(berlin_mfh$verbrauch_gesamt_kwh_spez < 400) , ]
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_wasser"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_wasser"] <- "strom"
getwd()
plz_bezirk <- read.csv2("./Postleitzahl/plz_bezirk_long.csv")
berlin_mfh$sto_plz <- as.integer(berlin_mfh$sto_plz)
berlin_sfh$sto_plz <- as.integer(berlin_sfh$sto_plz)
berlin_sfh <- merge(berlin_sfh , plz_bezirk_long , by.x="sto_plz" , by.y = "plz")
berlin_mfh <- merge(berlin_mfh , plz_bezirk_long , by.x="sto_plz" , by.y = "plz")
head(berlin_mfh)
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
#load("../MFH20022018_v2.RData")
load("../SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$gtype <- "SFH"
#MFH20022018$gtype <- "MFH"
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
load("../MFH20022018_v2.RData")
#load("SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
#SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
#SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$gtype <- "SFH"
MFH20022018$gtype <- "MFH"
subset_data_by_region <- function(inputdata , region) {
outputdata <- inputdata[inputdata$Landkreis_von_GS == region , ]
return(outputdata)
}
weather_data <- read.table("berlin_wetter_tegel.txt",header=TRUE)
names(weather_data) <- c("wind","sun","bedeckung","temperatur")
weather_data$abrechnungsjahr <- 2002:2018
berlin_sfh <- subset_data_by_region(SFH20022018,"Berlin, Stadt")
berlin_mfh <- subset_data_by_region(MFH20022018,"Berlin, Stadt")
#remove additional outliers
#berlin_mfh <- remove_outliers(berlin_mfh , c("gebaeude_baujahr","gebaeude_nutzflaeche","verbrauch_gesamt_kwh","verbrauch_gesamt_kwh_spez"))
berlin_mfh <- berlin_mfh[(berlin_mfh$verbrauch_gesamt_kwh_spez > 15)&(berlin_mfh$verbrauch_gesamt_kwh_spez < 400) , ]
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_wasser"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_wasser"] <- "strom"
getwd()
plz_bezirk <- read.csv2("./Postleitzahl/plz_bezirk_long.csv")
berlin_mfh$sto_plz <- as.integer(berlin_mfh$sto_plz)
berlin_sfh$sto_plz <- as.integer(berlin_sfh$sto_plz)
berlin_sfh <- merge(berlin_sfh , plz_bezirk_long , by.x="sto_plz" , by.y = "plz")
berlin_mfh <- merge(berlin_mfh , plz_bezirk_long , by.x="sto_plz" , by.y = "plz")
find_proportions <- function(obj,drop_cols) {# from the file BerlinPresentationCO2BalanceUnified_v6.Rmd
obj <- obj[ , !(names(obj) %in% drop_cols)]
obj <- obj / rowSums(obj)
obj <- 100*obj
obj$abrechnungsjahr <- 2002:2018
return(obj)
}
energy_proportions_by_et <- function(bezirk,input_data,drop_cols) {
#input_data is either berlin_mfh or berlin_sfh
require(dplyr)
input_data <- input_data[input_data$bezirk == bezirk , ]
by_year_ET <- group_by(input_data,abrechnungsjahr,energietraeger)
return_data <- as.data.frame(summarize(by_year_ET,sum(verbrauch_gesamt_kwh)))
names(return_data) <- c("abrechnungsjahr" ,"energietraeger" ,"sum_verbrauch_gesamt_kwh")
detach(package:dplyr)
require(reshape2)
return_data <- dcast(return_data , abrechnungsjahr ~ energietraeger , value.var = "sum_verbrauch_gesamt_kwh")
return_data <- find_proportions(return_data , "abrechnungsjahr")
return(return_data)
}
energy_proportions_by_et("pankow",berlin_sfh,"abrechnungsjahr")
energy_proportions_by_et("pankow",berlin_sfh,"abrechnungsjahr")
sum((berlin_sfh$energietraeger=="fluessiggas")&(berlin_sfh$abrechnungsjahr==2002)&(berlin_sfh$bezirk=="pankow"))
sum((berlin_sfh$energietraeger=="fluessiggas")&(berlin_sfh$abrechnungsjahr==2006)&(berlin_sfh$bezirk=="pankow"))
table(berlin_sfh[berlin_sfh$bezirk=="pankow" , ]$abrechnungsjahr)
berlin_sfh[berlin_sfh$abrechnungsjahr==2002 & berlin_sfh$bezirk=="pankow" , ]
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
#load("../MFH20022018_v2.RData")
load("../SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$gtype <- "SFH"
#MFH20022018$gtype <- "MFH"
setwd("D:/GITHUB_REPOS/co2emissions/Berlin/")
load("../MFH20022018_v2.RData")
#load("SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
#SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
#SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
#SFH20022018$gtype <- "SFH"
MFH20022018$gtype <- "MFH"
subset_data_by_region <- function(inputdata , region) {
outputdata <- inputdata[inputdata$Landkreis_von_GS == region , ]
return(outputdata)
}
weather_data <- read.table("berlin_wetter_tegel.txt",header=TRUE)
names(weather_data) <- c("wind","sun","bedeckung","temperatur")
weather_data$abrechnungsjahr <- 2002:2018
berlin_sfh <- subset_data_by_region(SFH20022018,"Berlin, Stadt")
berlin_mfh <- subset_data_by_region(MFH20022018,"Berlin, Stadt")
#remove additional outliers
#berlin_mfh <- remove_outliers(berlin_mfh , c("gebaeude_baujahr","gebaeude_nutzflaeche","verbrauch_gesamt_kwh","verbrauch_gesamt_kwh_spez"))
berlin_mfh <- berlin_mfh[(berlin_mfh$verbrauch_gesamt_kwh_spez > 15)&(berlin_mfh$verbrauch_gesamt_kwh_spez < 400) , ]
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_mfh$energietraeger[berlin_mfh$energietraeger=="waermepumpe_wasser"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="fernwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="nahwaerme"] <- "waerme"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_luft"] <- "strom"
berlin_sfh$energietraeger[berlin_sfh$energietraeger=="waermepumpe_wasser"] <- "strom"
getwd()
plz_bezirk <- read.csv2("./Postleitzahl/plz_bezirk_long.csv")
berlin_mfh$sto_plz <- as.integer(berlin_mfh$sto_plz)
berlin_sfh$sto_plz <- as.integer(berlin_sfh$sto_plz)
berlin_sfh <- merge(berlin_sfh , plz_bezirk_long , by.x="sto_plz" , by.y = "plz")
berlin_mfh <- merge(berlin_mfh , plz_bezirk_long , by.x="sto_plz" , by.y = "plz")
find_proportions <- function(obj,drop_cols) {# from the file BerlinPresentationCO2BalanceUnified_v6.Rmd
obj <- obj[ , !(names(obj) %in% drop_cols)]
obj <- obj / rowSums(obj)
obj <- 100*obj
obj$abrechnungsjahr <- 2002:2018
return(obj)
}
energy_proportions_by_et <- function(bezirk,input_data,drop_cols) {
#input_data is either berlin_mfh or berlin_sfh
require(dplyr)
input_data <- input_data[input_data$bezirk == bezirk , ]
by_year_ET <- group_by(input_data,abrechnungsjahr,energietraeger)
return_data <- as.data.frame(summarize(by_year_ET,sum(verbrauch_gesamt_kwh)))
names(return_data) <- c("abrechnungsjahr" ,"energietraeger" ,"sum_verbrauch_gesamt_kwh")
detach(package:dplyr)
require(reshape2)
return_data <- dcast(return_data , abrechnungsjahr ~ energietraeger , value.var = "sum_verbrauch_gesamt_kwh")
return_data[is.na(return_data)]=0.0
return_data <- find_proportions(return_data , "abrechnungsjahr")
return(return_data)
}
energy_proportions_by_et("pankow",berlin_sfh,"abrechnungsjahr")
