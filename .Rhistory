"fluessiggas" = "gray59",
"heizoel"     = "orange",
"holzpellets" = "blue",
"strom"       = "olivedrab4"
)
plot_title <- "Ulm, 1-2 FH"
order_legend <- rev(c("erdgas","waerme","fluessiggas","heizoel","holzpellets","strom"))
order_labels <- rev(c("Erdgas","Wärme (N+F)","Flüssiggas","Heizöl","Holzpellets","Strom (D+WP)"))
require(ggplot2)
plot_byET <- function(obj,xlabel,ylabel,plottitle) {
ggplot()+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[1]),color=et_list[1])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[2]),color=et_list[2])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[3]),color=et_list[3])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[4]),color=et_list[4])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[5]),color=et_list[5])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[6]),color=et_list[6])
)+scale_color_manual(labels=order_labels,name=" ",values=cols,breaks=order_legend
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[6])),fill=col_list[6]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[5])),fill=col_list[5]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[4])),fill=col_list[4]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[3])),fill=col_list[3]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[2])),fill=col_list[2]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[1])),fill=col_list[1])+theme_bw()+ labs(x=xlabel,y=ylabel,title=plottitle
)+scale_x_continuous(breaks=seq(2002,2018,2))
}
plot_byET(datawide,"Jahr","Anteile in Prozent", plot_title)
datawide_linear <- datawide[,grep("lm",names(datawide),value=TRUE)]
names(datawide_linear) <- gsub("_lm", "" , names(datawide_linear))
datawide_linear$abrechnungsjahr <- 2002:2018
plot_byET(datawide_linear,"Jahr","Anteile in Prozent", plot_title)
require(dplyr)
by_year_ETArea <- group_by(ulm_sfh,abrechnungsjahr,energietraeger)
ET_areas_by_year <- as.data.frame(summarize(by_year_ETArea,sum(gebaeude_nutzflaeche)))
names(ET_areas_by_year) <- c("abrechnungsjahr" ,"energietraeger" ,"sum_nutzflaeche")
#change to wide format
detach(package:dplyr)
library(reshape2)
ET_areas_by_year_wide <- dcast(ET_areas_by_year , abrechnungsjahr ~ energietraeger , value.var = "sum_nutzflaeche")
ET_areas_by_year_wide[is.na(ET_areas_by_year_wide)]=0.0
drop_cols <- "abrechnungsjahr"
ET_areas_by_year_wide$Yearlysum <- rowSums(ET_areas_by_year_wide[ , !(names(ET_areas_by_year_wide) %in% drop_cols)])
drop_cols <- c("abrechnungsjahr","Yearlysum")
area_prop_table <- as.data.frame(sapply(ET_areas_by_year_wide[ , !(names(ET_areas_by_year_wide) %in% drop_cols)],function(obj) obj/ET_areas_by_year_wide$Yearlysum))
area_prop_table$abrechnungsjahr <- 2002:2018
#area_prop_table
APT_round <- data.frame ( sapply ( area_prop_table[ , c("abrechnungsjahr" , names(area_prop_table)[names(area_prop_table)!="abrechnungsjahr"])] , function(obj) round(obj,2)))
APT_round <- APT_round[,reqd_order]
names(APT_round) <- final_names
grid.draw(tableGrob(APT_round,theme=ttheme_minimal(base_size = 8),rows=NULL))
area_prop_table <- area_prop_table[,c("erdgas","waerme","fluessiggas","heizoel","holzpellets","strom","abrechnungsjahr")]
area_prop_table_cumsums <- t(apply(area_prop_table[, !(names(area_prop_table)=="abrechnungsjahr")]
, 1 , cumsum))
area_prop_table_cumsums <- as.data.frame(area_prop_table_cumsums)
area_prop_table_cumsums$abrechnungsjahr <- area_prop_table$abrechnungsjahr
area_prop_table_cumsums[,names(area_prop_table_cumsums)!="abrechnungsjahr"] <- 100*area_prop_table_cumsums[,names(area_prop_table_cumsums)!="abrechnungsjahr"]
plot_byET(area_prop_table_cumsums,"Jahr","Anteile in Prozent", plot_title)
et_list <- names(area_prop_table_cumsums)[names(area_prop_table_cumsums)!="abrechnungsjahr"]
storage <- list()
for (et in et_list) {
storage[[et]] <- lm(get(et) ~ abrechnungsjahr , data = area_prop_table_cumsums)
}
slopes <- NULL
intercepts <- NULL
for (et in et_list) {
intercepts <- c(intercepts , as.numeric(coefficients(storage[[et]])[1]))
slopes <- c(slopes , as.numeric(coefficients(storage[[et]])[2]))
}
area_prop_cumsum_linear <- area_prop_table_cumsums
for (et in et_list) {
storage[[et]] <- lm(get(et) ~ abrechnungsjahr , data = area_prop_table_cumsums)
}
for (et in et_list) {
#colname <- paste0(et,"_lm")
area_prop_cumsum_linear[[et]] <- predict(storage[[et]] , newdata = area_prop_table_cumsums)
}
plot_byET(area_prop_cumsum_linear,"Jahr","Anteile in Prozent", plot_title)
totalArea <- read.table("wohngebaeude_2002_2018.txt",header=TRUE)
totalArea <- totalArea[ , c("abrechnungsjahr","totArea")]
totalAreaTab <- totalArea
names(totalAreaTab) <- c("Jahr","Fläche (qm)")
grid.draw(tableGrob(totalAreaTab,theme=ttheme_minimal(base_size = 8),rows=NULL))
is_not_year <- names(area_prop_table) != "abrechnungsjahr"
area_shares_absolute <- totalArea$totArea * area_prop_table[,is_not_year]
area_shares_absolute$abrechnungsjahr <- 2002:2018
ASA <- area_shares_absolute
ASA <- ASA[,reqd_order]
names(ASA) <- final_names
ASA2 <- data.frame(sapply(ASA , function(obj) as.integer(obj)))
grid.draw(tableGrob(ASA2,theme=ttheme_minimal(base_size = 8),rows=NULL))
area_shares_absolute_cumsums <- t(apply(area_shares_absolute[, !(names(area_shares_absolute)=="abrechnungsjahr")]
, 1 , cumsum))
area_shares_absolute_cumsums <- as.data.frame(area_shares_absolute_cumsums)
area_shares_absolute_cumsums$abrechnungsjahr <- area_shares_absolute$abrechnungsjahr
plot_byET(area_shares_absolute_cumsums,"Jahr","Fläche (qm)", plot_title)
et_list <- names(area_shares_absolute_cumsums)[names(area_shares_absolute_cumsums)!="abrechnungsjahr"]
storage <- list()
for (et in et_list) {
storage[[et]] <- lm(get(et) ~ abrechnungsjahr , data = area_shares_absolute_cumsums)
}
slopes <- NULL
intercepts <- NULL
for (et in et_list) {
intercepts <- c(intercepts , as.numeric(coefficients(storage[[et]])[1]))
slopes <- c(slopes , as.numeric(coefficients(storage[[et]])[2]))
}
area_abs_cumsum_linear <- area_shares_absolute_cumsums
for (et in et_list) {
storage[[et]] <- lm(get(et) ~ abrechnungsjahr , data = area_shares_absolute_cumsums)
}
for (et in et_list) {
area_abs_cumsum_linear[[et]] <- predict(storage[[et]] , newdata = area_shares_absolute_cumsums)
}
plot_byET(area_abs_cumsum_linear,"Jahr","Fläche (qm)", plot_title)
require(dplyr)
by_year <- group_by(ulm_sfh , abrechnungsjahr)
spz_verbrauch_mean <- as.data.frame(summarize(by_year,mean(verbrauch_gesamt_kwh_spez)))
names(spz_verbrauch_mean) <- c("abrechnungsjahr" , "mean_spz_verberauch")
totalConsumption <- data.frame(abrechnungsjahr = 2002:2018,gesamtVerbrauch = totalArea$totArea*spz_verbrauch_mean$mean_spz_verberauch)
totalConsumption$inTWh <- totalConsumption$gesamtVerbrauch/1e9
#grid.draw(tableGrob(totalConsumption,theme=ttheme_minimal(base_size = 8)))
is_not_year <- names(final_prop_table) != "abrechnungsjahr"
energy_shares_absolute <- totalConsumption$gesamtVerbrauch * final_prop_table[,is_not_year]
energy_shares_absolute$abrechnungsjahr <- 2002:2018
energy_shares_absolute$Yearlysum <- rowSums(energy_shares_absolute[,names(energy_shares_absolute)!="abrechnungsjahr"])
drop_cols <- c("abrechnungsjahr","Yearlysum")
energy_shares_relative <- as.data.frame(sapply(energy_shares_absolute[ , !(names(energy_shares_absolute) %in% drop_cols)],function(obj) obj/energy_shares_absolute$Yearlysum))
energy_shares_relative$abrechnungsjahr <- 2002:2018
ESA <- energy_shares_absolute[,c(reqd_order,"Yearlysum")]
names(ESA) <- c(final_names,"Yearlysum")
ESA2 <- data.frame(sapply(ESA , function(obj) round(obj,0)))
grid.draw(tableGrob(ESA2,theme=ttheme_minimal(base_size = 8),rows=NULL))
drop_cols <- c("abrechnungsjahr","Yearlysum")
energy_shares_absolute_cumsums <- t(apply(energy_shares_absolute[,!(names(energy_shares_absolute)%in%drop_cols)],1,cumsum))
energy_shares_absolute_cumsums <- as.data.frame(energy_shares_absolute_cumsums)
energy_shares_absolute_cumsums$abrechnungsjahr <- 2002:2018
plot_byET(energy_shares_absolute_cumsums,"Jahr","Verbrauch (kWh)", plot_title)
slopes <- NULL
intercepts <- NULL
energy_abs_cumsum_linear <- energy_shares_absolute_cumsums
et_list <- names(energy_shares_absolute_cumsums)[names(energy_shares_absolute_cumsums)!="abrechnungsjahr"]
storage <- list()
for (et in et_list) {
storage[[et]] <- lm(get(et) ~ abrechnungsjahr , data = energy_shares_absolute_cumsums)
intercepts <- c(intercepts , as.numeric(coefficients(storage[[et]])[1]))
slopes <- c(slopes , as.numeric(coefficients(storage[[et]])[2]))
energy_abs_cumsum_linear[[et]] <- predict(storage[[et]] , newdata = energy_shares_absolute_cumsums)
}
plot_byET(energy_abs_cumsum_linear,"Jahr","Verbrauch (kWh)", plot_title)
ESR <- energy_shares_relative[,reqd_order]
names(ESR) <- final_names
ESR[,names(ESR)!="Jahr"] <- 100.0*ESR[,names(ESR)!="Jahr"]
#ESR$total <- rowSums(ESR[,names(ESR)!="abrechnungsjahr"])
ESR2 <- data.frame(sapply(ESR , function(obj) round(obj,2)))
grid.draw(tableGrob(ESR2,theme=ttheme_minimal(base_size = 8),rows=NULL))
drop_cols <- "abrechnungsjahr"
energy_shares_relative_cumsums <- t(apply(energy_shares_relative[,!(names(energy_shares_relative)%in%drop_cols)],1,cumsum))
energy_shares_relative_cumsums <- as.data.frame(energy_shares_relative_cumsums)
energy_shares_relative_cumsums$abrechnungsjahr <- 2002:2018
plot_byET(energy_shares_relative_cumsums,"Jahr","Anteile in Prozent", plot_title)
co2_coeff <- read.table("UlmCO2Koeffizienten.txt",header=TRUE)
names(co2_coeff) <- c("abrechnungsjahr","erdgas","waerme","fluessiggas","heizoel","holzpellets","strom")
co2_coeff_tab <- co2_coeff[,reqd_order]
names(co2_coeff_tab) <- final_names
grid.draw(tableGrob(co2_coeff_tab,theme=ttheme_minimal(base_size = 8),rows=NULL))
co2_coeff_subset <- co2_coeff
energy_shares_absolute <- energy_shares_absolute[, names(energy_shares_absolute)!="Yearlysum"]
if (!setequal(names(energy_shares_absolute),names(co2_coeff_subset))) {
stop("give same names")
}
energy_shares_absolute_matchcoeff <- energy_shares_absolute[,names(co2_coeff_subset)]
co2_emissions <- (energy_shares_absolute_matchcoeff[,
names(energy_shares_absolute_matchcoeff)!="abrechnungsjahr"])*co2_coeff_subset[,names(co2_coeff_subset)!="abrechnungsjahr"]
co2_emissions_in_kilo_tons <- co2_emissions/1e9
co2_emissions_in_kilo_tons$abrechnungsjahr <- 2002:2018
co2_emissions_in_kilo_tons$total <- rowSums(co2_emissions_in_kilo_tons[,names(co2_emissions_in_kilo_tons)!="abrechnungsjahr"])
co2_kilotons_tab <- co2_emissions_in_kilo_tons[,c(reqd_order,"total")]
names(co2_kilotons_tab) <- c(final_names , "Total")
co2_kilotons_tab <- data.frame(sapply(co2_kilotons_tab , function(obj) round(obj,2)))
grid.draw(tableGrob(co2_kilotons_tab,theme=ttheme_minimal(base_size = 8),rows=NULL))
linmod <- lm(data=co2_emissions_in_kilo_tons,formula=total~abrechnungsjahr)
a <- as.numeric(coefficients(linmod)[1])
b <- as.numeric(coefficients(linmod)[2])
if (a<0) {
asign <- " "
} else {asign <- "+"}
if (b<0) {
bsign <- " "
} else {bsign <- " "}
ggplot()+geom_line(data=co2_emissions_in_kilo_tons,aes(x=abrechnungsjahr,y=total),color="blue")+geom_point(data=co2_emissions_in_kilo_tons,aes(x=abrechnungsjahr,y=total),color="blue")+theme_bw()+labs(x="Jahr",y="1.000 Tonnen",title=plot_title)+ylim(0,max(co2_emissions_in_kilo_tons$total))+geom_smooth(method="lm",data=co2_emissions_in_kilo_tons,aes(x=abrechnungsjahr,y=total),se=FALSE)+annotate(geom="text",label=paste0(bsign,as.character(round(b,2)),"x",asign,as.character(round(a,0))),x=2008,y=60)+scale_x_continuous(breaks=seq(2002,2018,2))
drop_cols <- names(co2_emissions_in_kilo_tons)[!(names(co2_emissions_in_kilo_tons)%in%c("abrechnungsjahr","total"))]
co2_abs_cumsums <- as.data.frame(t(apply(co2_emissions_in_kilo_tons[,drop_cols] , 1 , cumsum)))
co2_abs_cumsums$abrechnungsjahr <- 2002:2018
plot_byET(co2_abs_cumsums,"Jahr","1.000 Tonnen", plot_title)
slopes <- NULL
intercepts <- NULL
co2_abs_cumsums_linear <- co2_abs_cumsums
et_list <- names(co2_abs_cumsums)[names(co2_abs_cumsums)!="abrechnungsjahr"]
storage <- list()
for (et in et_list) {
storage[[et]] <- lm(get(et) ~ abrechnungsjahr , data = co2_abs_cumsums)
intercepts <- c(intercepts , as.numeric(coefficients(storage[[et]])[1]))
slopes <- c(slopes , as.numeric(coefficients(storage[[et]])[2]))
co2_abs_cumsums_linear[[et]] <- predict(storage[[et]] , newdata = co2_abs_cumsums)
}
plot_byET(co2_abs_cumsums_linear,"Jahr","1.000 Tonnen", plot_title)
drop_cols <- c("abrechnungsjahr","total")
co2_relative <- as.data.frame(sapply(co2_emissions_in_kilo_tons[,!(names(co2_emissions_in_kilo_tons)%in%drop_cols)],function(obj) obj/co2_emissions_in_kilo_tons$total))
co2_relative_tab <- co2_relative
co2_relative_tab$abrechnungsjahr <- 2002:2018
co2_relative_tab[,names(co2_relative_tab)!="abrechnungsjahr"] <- 100*co2_relative_tab[,names(co2_relative_tab)!="abrechnungsjahr"]
co2_relative_tab <- co2_relative_tab[,reqd_order]
names(co2_relative_tab) <- final_names
co2_relative_tab <- as.data.frame(sapply(co2_relative_tab , function(obj) round(obj,2)))
grid.draw(tableGrob(co2_relative_tab,theme=ttheme_minimal(base_size = 8),rows=NULL))
co2_relative_cumsums <- as.data.frame(t(apply(co2_relative,1,cumsum)))
co2_relative$abrechnungsjahr <- 2002:2018
co2_relative_cumsums$abrechnungsjahr <- 2002:2018
co2_relative_cumsums[,names(co2_relative_cumsums)!="abrechnungsjahr"] <- 100.0*co2_relative_cumsums[,names(co2_relative_cumsums)!="abrechnungsjahr"]
plot_byET(co2_relative_cumsums,"Jahr","Anteile in Prozent", plot_title)
slopes <- NULL
intercepts <- NULL
co2_rel_cumsums_linear <- co2_relative_cumsums
et_list <- names(co2_relative_cumsums)[names(co2_relative_cumsums)!="abrechnungsjahr"]
storage <- list()
for (et in et_list) {
storage[[et]] <- lm(get(et) ~ abrechnungsjahr , data = co2_relative_cumsums)
intercepts <- c(intercepts , as.numeric(coefficients(storage[[et]])[1]))
slopes <- c(slopes , as.numeric(coefficients(storage[[et]])[2]))
co2_rel_cumsums_linear[[et]] <- predict(storage[[et]] , newdata = co2_relative_cumsums)
}
plot_byET(co2_rel_cumsums_linear,"Jahr","Anteile in Prozent", plot_title)
spz_co2 <- 1e6*co2_emissions_in_kilo_tons$total/totalArea$totArea#kg/sq.m.
spez_co2_emission <- data.frame(abrechnungsjahr=2002:2018 , spez_co2 = spz_co2 )
linmod_spez <- lm(data=spez_co2_emission,formula=spez_co2~abrechnungsjahr)
a_spez <- as.numeric(coefficients(linmod_spez)[1])
b_spez <- as.numeric(coefficients(linmod_spez)[2])
if (a_spez<0) {
asign_spez <- " "
} else {asign_spez <- "+"}
if (b_spez<0) {
bsign_spez <- " "
} else {bsign_spez <- " "}
ggplot()+geom_line(data=spez_co2_emission,aes(x=abrechnungsjahr,y=spez_co2),color="blue")+geom_point(
data=spez_co2_emission,aes(x=abrechnungsjahr,y=spez_co2),color="blue")+theme_bw()+labs(x="Jahr",
y="kg/qm",title=plot_title)+ylim(0,max(spez_co2_emission$spez_co2))+geom_smooth(
method="lm",data=spez_co2_emission,aes(x=abrechnungsjahr,y=spez_co2),se=FALSE)+annotate(
geom="text",label=paste0(bsign_spez,as.character(round(b_spez,2)),"x",asign_spez,as.character(round(a_spez,0))
),x=2008,y=30)+scale_x_continuous(breaks=seq(2002,2018,2))
# How much area each ET covers
#area_shares_absolute
# How much energy each ET provides
# energy_shares_absolute
# How much CO2 each ET emits
#co2_emissions_in_kilo_tons
write.csv(area_shares_absolute,file="./data/presentations/ulm/sfh/area_abs_ET_SFH.csv",row.names = FALSE)
write.csv2(area_shares_absolute,file="./data/presentations/ulm/sfh/area_abs_ET_SFH_2.csv",row.names = FALSE)
write.csv(energy_shares_absolute,file="./data/presentations/ulm/sfh/energy_abs_ET_SFH.csv",row.names = FALSE)
write.csv2(energy_shares_absolute,file="./data/presentations/ulm/sfh/energy_abs_ET_SFH_2.csv",row.names = FALSE)
write.csv(co2_emissions_in_kilo_tons,file="./data/presentations/ulm/sfh/co2_abs_ET_SFH.csv",row.names = FALSE)
write.csv2(co2_emissions_in_kilo_tons,file="./data/presentations/ulm/sfh/co2_abs_ET_SFH_2.csv",row.names = FALSE)
totalArea
sample(8)
?sample
sample(80)
df <- data.frame(x=sample(10),y=sample(10),z=sample(10))
df
df1 <- data.frame(x=sample(10),y=sample(10),z=sample(10))
df2 <- data.frame(x=sample(10),y=sample(10),z=sample(10))
df1
df2
df1+df2
knitr::opts_chunk$set(echo = FALSE,message=FALSE)
setwd("D:/GITHUB_REPOS/co2emissions")
area_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/area_abs_ET_MFH.csv")
co2_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/co2_abs_ET_MFH.csv")
energy_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/energy_abs_ET_MFH.csv")
area_MFH <- read.csv("./data/presentations/ulm/mfh/totalArea_MFH.csv")
area_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/area_abs_ET_SFH.csv")
co2_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/co2_abs_ET_SFH.csv")
energy_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/energy_abs_ET_SFH.csv")
area_SFH <- read.csv("./data/presentations/ulm/sfh/totalArea_SFH.csv")
#co2_abs_by_ET_ALL <- co2_abs_by_ET_MFH[,names(co2_abs_by_ET_MFH)!="abrechnungsjahr"] + co2_abs_by_ET_SFH[,names(co2_abs_by_ET_SFH)!="abrechnungsjahr"]
co2_abs_by_ET_MFH
co2_abs_by_ET_SFH
#co2_abs_by_ET_ALL <- co2_abs_by_ET_MFH[,names(co2_abs_by_ET_MFH)!="abrechnungsjahr"] + co2_abs_by_ET_SFH[,names(co2_abs_by_ET_SFH)!="abrechnungsjahr"]
co2_abs_by_ET_MFH
co2_abs_by_ET_SFH
knitr::opts_chunk$set(echo = FALSE,message=FALSE)
setwd("D:/GITHUB_REPOS/co2emissions")
area_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/area_abs_ET_MFH.csv")
co2_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/co2_abs_ET_MFH.csv")
energy_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/energy_abs_ET_MFH.csv")
area_MFH <- read.csv("./data/presentations/ulm/mfh/totalArea_MFH.csv")
area_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/area_abs_ET_SFH.csv")
co2_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/co2_abs_ET_SFH.csv")
energy_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/energy_abs_ET_SFH.csv")
area_SFH <- read.csv("./data/presentations/ulm/sfh/totalArea_SFH.csv")
col_list <- c("royalblue4","orangered1","gray59","orange","blue","olivedrab4")
cols <- c(
"erdgas"      = "royalblue4",
"waerme"      = "orangered1",
"fluessiggas" = "gray59",
"heizoel"     = "orange",
"holzpellets" = "blue",
"strom"       = "olivedrab4"
)
plot_title <- "Ulm, Alle Gebäude"
order_legend <- rev(c("erdgas","waerme","fluessiggas","heizoel","holzpellets","strom"))
order_labels <- rev(c("Erdgas","Wärme (N+F)","Flüssiggas","Heizöl","Holzpellets","Strom (D+WP)"))
require(ggplot2)
plot_byET <- function(obj,xlabel,ylabel,plottitle) {
ggplot()+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[1]),color=et_list[1])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[2]),color=et_list[2])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[3]),color=et_list[3])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[4]),color=et_list[4])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[5]),color=et_list[5])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[6]),color=et_list[6])
)+scale_color_manual(labels=order_labels,name=" ",values=cols,breaks=order_legend
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[6])),fill=col_list[6]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[5])),fill=col_list[5]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[4])),fill=col_list[4]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[3])),fill=col_list[3]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[2])),fill=col_list[2]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[1])),fill=col_list[1])+theme_bw()+ labs(x=xlabel,y=ylabel,title=plottitle
)+scale_x_continuous(breaks=seq(2002,2018,2))
}
co2_abs_by_ET_ALL <- co2_abs_by_ET_MFH[,names(co2_abs_by_ET_MFH)!="abrechnungsjahr"] + co2_abs_by_ET_SFH[,names(co2_abs_by_ET_SFH)!="abrechnungsjahr"]
et_list <- names(co2_abs_by_ET_ALL)[ !(names(co2_abs_by_ET_ALL) %in% c("abrechnungsjahr","total"))]
et_list
knitr::opts_chunk$set(echo = FALSE,message=FALSE)
setwd("D:/GITHUB_REPOS/co2emissions")
area_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/area_abs_ET_MFH.csv")
co2_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/co2_abs_ET_MFH.csv")
energy_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/energy_abs_ET_MFH.csv")
area_MFH <- read.csv("./data/presentations/ulm/mfh/totalArea_MFH.csv")
area_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/area_abs_ET_SFH.csv")
co2_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/co2_abs_ET_SFH.csv")
energy_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/energy_abs_ET_SFH.csv")
area_SFH <- read.csv("./data/presentations/ulm/sfh/totalArea_SFH.csv")
col_list <- c("royalblue4","orangered1","gray59","orange","blue","olivedrab4")
cols <- c(
"erdgas"      = "royalblue4",
"waerme"      = "orangered1",
"fluessiggas" = "gray59",
"heizoel"     = "orange",
"holzpellets" = "blue",
"strom"       = "olivedrab4"
)
plot_title <- "Ulm, Alle Gebäude"
order_legend <- rev(c("erdgas","waerme","fluessiggas","heizoel","holzpellets","strom"))
order_labels <- rev(c("Erdgas","Wärme (N+F)","Flüssiggas","Heizöl","Holzpellets","Strom (D+WP)"))
require(ggplot2)
plot_byET <- function(obj,xlabel,ylabel,plottitle) {
ggplot()+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[1]),color=et_list[1])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[2]),color=et_list[2])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[3]),color=et_list[3])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[4]),color=et_list[4])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[5]),color=et_list[5])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[6]),color=et_list[6])
)+scale_color_manual(labels=order_labels,name=" ",values=cols,breaks=order_legend
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[6])),fill=col_list[6]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[5])),fill=col_list[5]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[4])),fill=col_list[4]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[3])),fill=col_list[3]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[2])),fill=col_list[2]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[1])),fill=col_list[1])+theme_bw()+ labs(x=xlabel,y=ylabel,title=plottitle
)+scale_x_continuous(breaks=seq(2002,2018,2))
}
co2_abs_by_ET_ALL <- co2_abs_by_ET_MFH[,names(co2_abs_by_ET_MFH)!="abrechnungsjahr"] + co2_abs_by_ET_SFH[,names(co2_abs_by_ET_SFH)!="abrechnungsjahr"]
et_list <- names(co2_abs_by_ET_ALL)[ !(names(co2_abs_by_ET_ALL) %in% c("abrechnungsjahr","total"))]
reqd_order <- c("abrechnungsjahr","erdgas","waerme","fluessiggas","heizoel","holzpellets","strom")
final_names <- c("Jahr","Erdgas","Wärme","Flüssiggas","Heizöl","Holzpellets","Strom")
library(gridExtra)
library(grid)
co2_abs_by_ET_ALL_TAB <- data.frame(sapply(co2_abs_by_ET_ALL , function(obj) round(obj,2)))
co2_abs_by_ET_ALL_TAB
knitr::opts_chunk$set(echo = FALSE,message=FALSE)
setwd("D:/GITHUB_REPOS/co2emissions")
area_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/area_abs_ET_MFH.csv")
co2_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/co2_abs_ET_MFH.csv")
energy_abs_by_ET_MFH <- read.csv("./data/presentations/ulm/mfh/energy_abs_ET_MFH.csv")
area_MFH <- read.csv("./data/presentations/ulm/mfh/totalArea_MFH.csv")
area_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/area_abs_ET_SFH.csv")
co2_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/co2_abs_ET_SFH.csv")
energy_abs_by_ET_SFH <- read.csv("./data/presentations/ulm/sfh/energy_abs_ET_SFH.csv")
area_SFH <- read.csv("./data/presentations/ulm/sfh/totalArea_SFH.csv")
col_list <- c("royalblue4","orangered1","gray59","orange","blue","olivedrab4")
cols <- c(
"erdgas"      = "royalblue4",
"waerme"      = "orangered1",
"fluessiggas" = "gray59",
"heizoel"     = "orange",
"holzpellets" = "blue",
"strom"       = "olivedrab4"
)
plot_title <- "Ulm, Alle Gebäude"
order_legend <- rev(c("erdgas","waerme","fluessiggas","heizoel","holzpellets","strom"))
order_labels <- rev(c("Erdgas","Wärme (N+F)","Flüssiggas","Heizöl","Holzpellets","Strom (D+WP)"))
require(ggplot2)
plot_byET <- function(obj,xlabel,ylabel,plottitle) {
ggplot()+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[1]),color=et_list[1])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[2]),color=et_list[2])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[3]),color=et_list[3])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[4]),color=et_list[4])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[5]),color=et_list[5])
)+geom_line(data=obj,aes(x=abrechnungsjahr,y=get(et_list[6]),color=et_list[6])
)+scale_color_manual(labels=order_labels,name=" ",values=cols,breaks=order_legend
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[6])),fill=col_list[6]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[5])),fill=col_list[5]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[4])),fill=col_list[4]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[3])),fill=col_list[3]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[2])),fill=col_list[2]
)+geom_ribbon(data=obj,aes(x=abrechnungsjahr,ymin=0,ymax=get(et_list[1])),fill=col_list[1])+theme_bw()+ labs(x=xlabel,y=ylabel,title=plottitle
)+scale_x_continuous(breaks=seq(2002,2018,2))
}
co2_abs_by_ET_ALL <- co2_abs_by_ET_MFH[,names(co2_abs_by_ET_MFH)!="abrechnungsjahr"] + co2_abs_by_ET_SFH[,names(co2_abs_by_ET_SFH)!="abrechnungsjahr"]
et_list <- names(co2_abs_by_ET_ALL)[ !(names(co2_abs_by_ET_ALL) %in% c("abrechnungsjahr","total"))]
co2_abs_by_ET_ALL$abrechnungsjahr <- 2002:2018
reqd_order <- c("abrechnungsjahr","erdgas","waerme","fluessiggas","heizoel","holzpellets","strom")
final_names <- c("Jahr","Erdgas","Wärme","Flüssiggas","Heizöl","Holzpellets","Strom")
library(gridExtra)
library(grid)
co2_abs_by_ET_ALL_TAB <- data.frame(sapply(co2_abs_by_ET_ALL , function(obj) round(obj,2)))
co2_abs_by_ET_ALL_TAB <- co2_abs_by_ET_ALL_TAB[, c(reqd_order , "total")]
co2_abs_by_ET_ALL_TAB
co2_abs_by_ET_ALL_TAB <- data.frame(sapply(co2_abs_by_ET_ALL , function(obj) round(obj,2)))
co2_abs_by_ET_ALL_TAB <- co2_abs_by_ET_ALL_TAB[, c(reqd_order , "total")]
names(co2_abs_by_ET_ALL_TAB) <- c(final_names , "Total")
co2_abs_by_ET_ALL_TAB
co2_abs_by_ET_ALL
#co2_abs_by_ET_ALL
drop_cols <- c("total","abrechnungsjahr")
co2_abs_by_ET_ALL[,!(names(co2_abs_by_ET_ALL)%in%drop_cols)]
#co2_abs_by_ET_ALL
drop_cols <- c("total","abrechnungsjahr")
co2_rel_by_ET_ALL <- as.data.frame(sapply(co2_abs_by_ET_ALL[,!(names(co2_abs_by_ET_ALL)%in%drop_cols)] , function(obj) obj/co2_abs_by_ET_ALL$total))
co2_rel_by_ET_ALL
#co2_abs_by_ET_ALL
drop_cols <- c("total","abrechnungsjahr")
co2_rel_by_ET_ALL <- as.data.frame(sapply(co2_abs_by_ET_ALL[,!(names(co2_abs_by_ET_ALL)%in%drop_cols)] , function(obj) obj/co2_abs_by_ET_ALL$total))
rowSums(co2_rel_by_ET_ALL)
#co2_abs_by_ET_ALL
drop_cols <- c("total","abrechnungsjahr")
co2_rel_by_ET_ALL <- as.data.frame(sapply(co2_abs_by_ET_ALL[,!(names(co2_abs_by_ET_ALL)%in%drop_cols)] , function(obj) obj/co2_abs_by_ET_ALL$total))
co2_rel_by_ET_ALL
#co2_abs_by_ET_ALL
drop_cols <- c("total","abrechnungsjahr")
co2_rel_by_ET_ALL <- as.data.frame(sapply(co2_abs_by_ET_ALL[,!(names(co2_abs_by_ET_ALL)%in%drop_cols)] , function(obj) obj/co2_abs_by_ET_ALL$total))
co2_rel_by_ET_ALL <- 100*co2_rel_by_ET_ALL
co2_rel_by_ET_ALL$abrechnungsjahr <- 2002:2018
co2_rel_by_ET_ALL_TAB <- data.frame(sapply(co2_rel_by_ET_ALL , function(obj) round(obj,2)))
co2_rel_by_ET_ALL_TAB <- co2_rel_by_ET_ALL_TAB[,reqd_order]
co2_rel_by_ET_ALL_TAB
#co2_abs_by_ET_ALL
drop_cols <- c("total","abrechnungsjahr")
co2_rel_by_ET_ALL <- as.data.frame(sapply(co2_abs_by_ET_ALL[,!(names(co2_abs_by_ET_ALL)%in%drop_cols)] , function(obj) obj/co2_abs_by_ET_ALL$total))
co2_rel_by_ET_ALL <- 100*co2_rel_by_ET_ALL
co2_rel_by_ET_ALL$abrechnungsjahr <- 2002:2018
co2_rel_by_ET_ALL_TAB <- data.frame(sapply(co2_rel_by_ET_ALL , function(obj) round(obj,2)))
co2_rel_by_ET_ALL_TAB <- co2_rel_by_ET_ALL_TAB[,reqd_order]
co2_rel_by_ET_ALL_TAB
#co2_abs_by_ET_ALL
drop_cols <- c("total","abrechnungsjahr")
co2_rel_by_ET_ALL <- as.data.frame(sapply(co2_abs_by_ET_ALL[,!(names(co2_abs_by_ET_ALL)%in%drop_cols)] , function(obj) obj/co2_abs_by_ET_ALL$total))
co2_rel_by_ET_ALL <- 100*co2_rel_by_ET_ALL
co2_rel_by_ET_ALL$abrechnungsjahr <- 2002:2018
co2_rel_by_ET_ALL_TAB <- data.frame(sapply(co2_rel_by_ET_ALL , function(obj) round(obj,2)))
co2_rel_by_ET_ALL_TAB <- co2_rel_by_ET_ALL_TAB[,reqd_order]
co2_rel_by_ET_ALL_TAB
#co2_abs_by_ET_ALL
drop_cols <- c("total","abrechnungsjahr")
co2_rel_by_ET_ALL <- as.data.frame(sapply(co2_abs_by_ET_ALL[,!(names(co2_abs_by_ET_ALL)%in%drop_cols)] , function(obj) obj/co2_abs_by_ET_ALL$total))
co2_rel_by_ET_ALL <- 100*co2_rel_by_ET_ALL
co2_rel_by_ET_ALL$abrechnungsjahr <- 2002:2018
co2_rel_by_ET_ALL_TAB <- data.frame(sapply(co2_rel_by_ET_ALL , function(obj) round(obj,2)))
co2_rel_by_ET_ALL_TAB <- co2_rel_by_ET_ALL_TAB[,reqd_order]
co2_rel_by_ET_ALL_TAB
#co2_abs_by_ET_ALL
drop_cols <- c("total","abrechnungsjahr")
co2_rel_by_ET_ALL <- as.data.frame(sapply(co2_abs_by_ET_ALL[,!(names(co2_abs_by_ET_ALL)%in%drop_cols)] , function(obj) obj/co2_abs_by_ET_ALL$total))
co2_rel_by_ET_ALL <- 100*co2_rel_by_ET_ALL
co2_rel_by_ET_ALL$abrechnungsjahr <- 2002:2018
co2_rel_by_ET_ALL_TAB <- data.frame(sapply(co2_rel_by_ET_ALL , function(obj) round(obj,2)))
co2_rel_by_ET_ALL_TAB <- co2_rel_by_ET_ALL_TAB[,reqd_order]
names(co2_rel_by_ET_ALL_TAB) <- final_names
co2_rel_by_ET_ALL_TAB
co2_rel_by_ET_ALL
co2_rel_by_ET_ALL_cumsums <- as.data.frame(t(apply(co2_rel_by_ET_ALL[,names(co2_rel_by_ET_ALL)!="abrechnunhgsjahr"] , 1 , cumsum)))
co2_rel_by_ET_ALL_cumsums
knit_with_parameters('D:/GITHUB_REPOS/co2emissions/UlmPresentationCO2BalanceAll_v3.Rmd', encoding = 'UTF-8')
setwd("D:/GITHUB_REPOS/co2emissions")
load("MFH20022018_v2.RData")
load("SFH20022018_v2.RData")
#In SFH20022018, abrechnungsjahr and verbrauch_gesamt_kwh are character - change then to int and numeric
SFH20022018$abrechnungsjahr <- as.integer(SFH20022018$abrechnungsjahr)
SFH20022018$verbrauch_gesamt_kwh <- gsub("," , "." , SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$verbrauch_gesamt_kwh <- as.numeric(SFH20022018$verbrauch_gesamt_kwh)
SFH20022018$gtype <- "SFH"
MFH20022018$gtype <- "MFH"
berlinSFH <- SFH20022018[SFH20022018$Landkreis_von_GS=="Berlin, Stadt"     ,  ]
berlinSFH <- berlinSFH[!is.na(berlinSFH$gebaeude_baujahr)   ,  ]
berlinSFH <- berlinSFH[!is.na(berlinSFH$gebaeude_nutzflaeche)   ,  ]
berlinSFH <- berlinSFH[!is.na(berlinSFH$verbrauch_gesamt_kwh_spez)   ,  ]
berlinMFH <- MFH20022018[MFH20022018$Landkreis_von_GS=="Berlin, Stadt"     ,  ]
berlinMFH <- berlinMFH[!is.na(berlinMFH$gebaeude_baujahr)   ,  ]
berlinMFH <- berlinMFH[!is.na(berlinMFH$gebaeude_nutzflaeche)   ,  ]
berlinMFH <- berlinMFH[!is.na(berlinMFH$verbrauch_gesamt_kwh_spez)   ,  ]
write.csv2(berlinMFH,file="berlinMFH.csv",row.names = FALSE)
write.csv2(berlinSFH,file="berlinSFH.csv",row.names = FALSE)
getwd()
dim(berlinMFH)
dim(berlinSFH)
